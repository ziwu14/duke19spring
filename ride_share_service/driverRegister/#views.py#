from django.shortcuts import render
from django.urls import reverse
#from django.urls import reverse_lazy
#from django.views.generic import TemplateView
from django.http import HttpResponse, HttpResponseRedirect
from django import forms
from django.forms import ModelForm
from driverRegister.forms import DriverRegisterForm, EditProfileForm, EditDriverProfileForm
from django.contrib.auth.models import User
from django.contrib.auth.forms import UserChangeForm

# Create your views here.
def reg_driver(request):
    #try:
    #    driverProfile = request.user.driver
    #except Driver.DoesNotExist:
    #    driverProfile = Driver(user=request.user)
    #registered = False
    # if this is a POST request we need to process the form data
    if request.method == 'POST':
        # create a form instance and populate it with data from the request:
        form = DriverRegisterForm(request.POST)
        # check whether it's valid:
        if form.is_valid():
            instance = form.save(commit=False)
            instance.user = request.user
            instance.save()
            #registered = True
            # process the data in form.cleaned_data as required
            # ...
            # redirect to a new URL:
            return HttpResponseRedirect('/test/')
            #return render(request, 'driver_register_form.html', {'form': form,'registered': registered})

    # if a GET (or any other method) we'll create a blank form
    else:
        form = DriverRegisterForm()

    return render(request, 'driver_register_form.html', {'form': form})
                                                         #'registered': registered})

def view_profile(request):
    args = {'user':request.user}
    return render(request, 'driver_detail.html',args)

def edit_profile(request):
    if request.method == 'post':
        form = EditProfileForm(request.POST, instance=request.user)
        driver_form = EditDriverProfileForm(request.POST, instance=request.user)

        if form.is_valid() and driver_form.is_valid():
            form.save()

            #driver_instance = driver_form.save(commit=False)
            #driver_instance.user = request.user
            driver_instance.save()

            #return redirect('/driverRegister/profile')
            return HttpResponseRedirect(reverse('driverRegister:profile'))
    else:
        form = EditProfileForm(instance=request.user)
        driver_form = EditDriverProfileForm(instance=request.user)
        args = {'form': form, 'driver_form': driver_form}
        return render(request, 'edit_profile.html',args)
